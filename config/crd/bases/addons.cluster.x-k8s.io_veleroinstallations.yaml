---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: veleroinstallations.addons.cluster.x-k8s.io
spec:
  group: addons.cluster.x-k8s.io
  names:
    kind: VeleroInstallation
    listKind: VeleroInstallationList
    plural: veleroinstallations
    singular: veleroinstallation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VeleroInstallation is the Schema for the veleroinstallations
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VeleroInstallationSpec defines the desired state of VeleroInstallation
            properties:
              bucket:
                type: string
              clusterSelector:
                description: |-
                  ClusterSelector selects Clusters in the same namespace with a label that matches the specified label selector. The Helm
                  chart will be installed on all selected Clusters. If a Cluster is no longer selected, the Helm release will be uninstalled.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              helmSpec:
                description: HelmSpec is a Helm chart proxy installation spec
                properties:
                  chartName:
                    description: |-
                      ChartName is the name of the Helm chart in the repository.
                      e.g. chart-path oci://repo-url/chart-name as chartName: chart-name and https://repo-url/chart-name as chartName: chart-name
                    type: string
                  clusterSelector:
                    description: |-
                      ClusterSelector selects Clusters in the same namespace with a label that matches the specified label selector. The Helm
                      chart will be installed on all selected Clusters. If a Cluster is no longer selected, the Helm release will be uninstalled.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  credentials:
                    description: Credentials is a reference to an object containing
                      the OCI credentials. If it is not specified, no credentials
                      will be used.
                    properties:
                      key:
                        description: Key is the key in the Secret containing the OCI
                          credentials.
                        type: string
                      secret:
                        description: Secret is a reference to a Secret containing
                          the OCI credentials.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - key
                    - secret
                    type: object
                  namespace:
                    description: |-
                      ReleaseNamespace is the namespace the Helm release will be installed on each selected
                      Cluster. If it is not specified, it will be set to the default namespace.
                    type: string
                  options:
                    description: |-
                      Options represents CLI flags passed to Helm operations (i.e. install, upgrade, delete) and
                      include options such as wait, skipCRDs, timeout, waitForJobs, etc.
                    properties:
                      atomic:
                        description: |-
                          Atomic indicates the installation/upgrade process to delete the installation or rollback on failure.
                          If 'Atomic' is set, wait will be enabled automatically during helm install/upgrade operation.
                        type: boolean
                      dependencyUpdate:
                        description: DependencyUpdate indicates the Helm install/upgrade
                          action to get missing dependencies.
                        type: boolean
                      disableHooks:
                        description: DisableHooks prevents hooks from running during
                          the Helm install action.
                        type: boolean
                      disableOpenAPIValidation:
                        description: DisableOpenAPIValidation controls whether OpenAPI
                          validation is enforced.
                        type: boolean
                      enableClientCache:
                        default: false
                        description: EnableClientCache is a flag to enable Helm client
                          cache. If it is not specified, it will be set to true.
                        type: boolean
                      install:
                        description: |-
                          Install represents CLI flags passed to Helm install operation which can be used to control
                          behaviour of helm Install operations via options like wait, skipCrds, timeout, waitForJobs, etc.
                        properties:
                          createNamespace:
                            default: true
                            description: |-
                              CreateNamespace indicates the Helm install/upgrade action to create the
                              HelmChartProxySpec.ReleaseNamespace if it does not exist yet.
                              On uninstall, the namespace will not be garbage collected.
                              If it is not specified by user, will be set to default 'true'.
                            type: boolean
                          includeCRDs:
                            description: IncludeCRDs determines whether CRDs stored
                              as a part of helm templates directory should be installed.
                            type: boolean
                        type: object
                      options:
                        description: SubNotes determines whether sub-notes should
                          be rendered in the chart.
                        type: boolean
                      skipCRDs:
                        description: |-
                          SkipCRDs controls whether CRDs should be installed during install/upgrade operation.
                          By default, CRDs are installed if not already present.
                          If set, no CRDs will be installed.
                        type: boolean
                      timeout:
                        description: |-
                          Timeout is the time to wait for any individual Kubernetes operation (like
                          resource creation, Jobs for hooks, etc.) during the performance of a Helm install action.
                          Defaults to '10 min'.
                        type: string
                      uninstall:
                        description: |-
                          Uninstall represents CLI flags passed to Helm uninstall operation which can be used to control
                          behaviour of helm Uninstall operation via options like wait, timeout, etc.
                        properties:
                          description:
                            description: Description represents human readable information
                              to be shown on release uninstall.
                            type: string
                          keepHistory:
                            description: |-
                              KeepHistory defines whether historical revisions of a release should be saved.
                              If it's set, helm uninstall operation will not delete the history of the release.
                              The helm storage backend (secret, configmap, etc) will be retained in the cluster.
                            type: boolean
                        type: object
                      upgrade:
                        description: |-
                          Upgrade represents CLI flags passed to Helm upgrade operation which can be used to control
                          behaviour of helm Upgrade operations via options like wait, skipCrds, timeout, waitForJobs, etc.
                        properties:
                          cleanupOnFail:
                            description: CleanupOnFail indicates the upgrade action
                              to delete newly-created resources on a failed update
                              operation.
                            type: boolean
                          force:
                            description: |-
                              Force indicates to ignore certain warnings and perform the helm release upgrade anyway.
                              This should be used with caution.
                            type: boolean
                          maxHistory:
                            default: 10
                            description: MaxHistory limits the maximum number of revisions
                              saved per release (default is 10).
                            type: integer
                          recreate:
                            description: Recreate will (if true) recreate pods after
                              a rollback.
                            type: boolean
                          resetThenReuseValues:
                            description: ResetThenReuseValues will reset the values
                              to the chart's built-ins then merge with user's last
                              supplied values.
                            type: boolean
                          resetValues:
                            description: ResetValues will reset the values to the
                              chart's built-ins rather than merging with existing.
                            type: boolean
                          reuseValues:
                            description: ReuseValues will re-use the user's last supplied
                              values.
                            type: boolean
                        type: object
                      wait:
                        description: Wait enables the waiting for resources to be
                          ready after a Helm install/upgrade has been performed.
                        type: boolean
                      waitForJobs:
                        description: WaitForJobs enables waiting for jobs to complete
                          after a Helm install/upgrade has been performed.
                        type: boolean
                    type: object
                  releaseName:
                    description: ReleaseName is the release name of the installed
                      Helm chart. If it is not specified, a name will be generated.
                    type: string
                  repoURL:
                    description: |-
                      RepoURL is the URL of the Helm chart repository.
                      e.g. chart-path oci://repo-url/chart-name as repoURL: oci://repo-url and https://repo-url/chart-name as repoURL: https://repo-url
                    type: string
                  tlsConfig:
                    description: TLSConfig contains the TLS configuration for a HelmChartProxy.
                    properties:
                      caSecret:
                        description: Secret is a reference to a Secret containing
                          the TLS CA certificate at the key ca.crt.
                        properties:
                          name:
                            description: name is unique within a namespace to reference
                              a secret resource.
                            type: string
                          namespace:
                            description: namespace defines the space within which
                              the secret name must be unique.
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      insecureSkipTLSVerify:
                        description: InsecureSkipTLSVerify controls whether the Helm
                          client should verify the server's certificate.
                        type: boolean
                    type: object
                  valuesTemplate:
                    description: |-
                      ValuesTemplate is an inline YAML representing the values for the Helm chart. This YAML supports Go templating to reference
                      fields from each selected workload Cluster and programatically create and set values.
                    type: string
                  version:
                    description: |-
                      Version is the version of the Helm chart. If it is not specified, the chart will use
                      and be kept up to date with the latest version.
                    type: string
                required:
                - chartName
                - clusterSelector
                - repoURL
                type: object
              namespace:
                type: string
              provider:
                properties:
                  aws:
                    properties:
                      config:
                        properties:
                          region:
                            type: string
                          s3Url:
                            type: string
                        type: object
                      credentialMap:
                        properties:
                          from:
                            type: string
                          namespaceName:
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          to:
                            type: string
                        type: object
                      pluginTag:
                        type: string
                      pluginURL:
                        type: string
                    type: object
                  azure:
                    properties:
                      config:
                        properties:
                          resourceGroup:
                            description: AZURE_BACKUP_RESOURCE_GROUP
                            type: string
                          storageAccount:
                            description: AZURE_STORAGE_ACCOUNT_ID
                            type: string
                          storageAccountKeyEnvVar:
                            description: AZURE_STORAGE_ACCOUNT_ACCESS_KEY
                            type: string
                          subscriptionId:
                            description: AZURE_BACKUP_SUBSCRIPTION_ID
                            type: string
                        required:
                        - resourceGroup
                        - storageAccount
                        type: object
                      credentialMap:
                        properties:
                          from:
                            type: string
                          namespaceName:
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          to:
                            type: string
                        type: object
                      pluginTag:
                        type: string
                      pluginURL:
                        type: string
                    type: object
                  gcp:
                    properties:
                      config:
                        properties:
                          kmsKeyName:
                            description: |-
                              Name of the Cloud KMS key to use to encrypt backups stored in this location, in the form
                              "projects/P/locations/L/keyRings/R/cryptoKeys/K". See customer-managed Cloud KMS keys
                              (https://cloud.google.com/storage/docs/encryption/using-customer-managed-keys) for details.
                            type: string
                          project:
                            description: |-
                              The project ID where existing snapshots should be retrieved from during restores, if
                              different than the project that your IAM account is in. This field has no effect on
                              where new snapshots are created; it is only useful for restoring existing snapshots
                              from a different project.


                              Optional (defaults to the project that the GCP IAM account is in).
                              Example: my-alternate-project
                            type: string
                          serviceAccount:
                            description: |-
                              Name of the GCP service account to use for this backup storage location. Specify the
                              service account here if you want to use workload identity instead of providing the key file.


                              Optional (defaults to "false").
                            type: string
                          snapshotLocation:
                            description: |-
                              The GCP location where snapshots should be stored. See the GCP documentation
                              (https://cloud.google.com/storage/docs/locations#available_locations) for the
                              full list. If not specified, snapshots are stored in the default location
                              (https://cloud.google.com/compute/docs/disks/create-snapshots#default_location).


                              Example: us-central1
                            type: string
                        type: object
                      credentialMap:
                        properties:
                          from:
                            type: string
                          namespaceName:
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                          to:
                            type: string
                        type: object
                      pluginTag:
                        type: string
                      pluginURL:
                        type: string
                    type: object
                type: object
              state:
                properties:
                  cleanUpCRDs:
                    type: boolean
                  configuration:
                    description: Configuration is a bucket configuration
                    properties:
                      backupStorageLocation:
                        items:
                          properties:
                            accessMode:
                              description: Access mode for this backup storage location.
                                Defaults to ReadWrite.
                              type: string
                            bucket:
                              description: The name or ID of the bucket to store backups
                                in. Required.
                              type: string
                            caCert:
                              description: Base64 encoded CA bundle used when verifying
                                TLS connections to the provider.
                              type: string
                            config:
                              additionalProperties:
                                type: string
                              description: |-
                                Config containe additional provider-specific configuration. See link above
                                for details of required/optional fields for your provider.
                              type: object
                            credential:
                              properties:
                                key:
                                  description: Key that contains the secret data to
                                    be used.
                                  type: string
                                name:
                                  description: Name of the secret used by this backupStorageLocation.
                                  type: string
                              type: object
                            default:
                              description: Flag to indicate if this is the default
                                backup storage location (used as fallback if no other
                                location is specified). Optional.
                              type: boolean
                            name:
                              description: Name of this backup storage location. If
                                unspecified, use "default".
                              type: string
                            prefix:
                              description: Directory under which all Velero data will
                                be stored within the bucket. Optional.
                              type: string
                            provider:
                              description: The name for the backup storage provider.
                              type: string
                            validationFrequency:
                              description: Frequency at which Velero should perform
                                validation checks on this location. Optional.
                              format: int64
                              type: integer
                          required:
                          - bucket
                          - provider
                          type: object
                        type: array
                      volumeSnapshotLocation:
                        items:
                          properties:
                            config:
                              additionalProperties:
                                type: string
                              description: |-
                                Config containe additional provider-specific configuration. See link above
                                for details of required/optional fields for your provider.
                              type: object
                            credential:
                              properties:
                                key:
                                  description: Key that contains the secret data to
                                    be used.
                                  type: string
                                name:
                                  description: Name of the secret used by this backupStorageLocation.
                                  type: string
                              type: object
                            name:
                              description: Name of this backup storage location. If
                                unspecified, use "default".
                              type: string
                            provider:
                              description: The name for the backup storage provider.
                              type: string
                          required:
                          - provider
                          type: object
                        type: array
                    required:
                    - backupStorageLocation
                    - volumeSnapshotLocation
                    type: object
                  credentials:
                    description: |-
                      Info about the secret to be used by the Velero deployment, which
                      should contain credentials for the cloud provider IAM account you've
                      set up for Velero.
                    properties:
                      contents:
                        additionalProperties:
                          type: string
                        description: 'Map storing secret contents (key: "<cloud>",
                          value: entire IAM credential file).'
                        type: object
                      existingSecret:
                        description: Pre-existing secret name in the Velero namespace,
                          if any.
                        type: string
                      extraEnvVars:
                        additionalProperties:
                          type: string
                        description: Environment variables from the secret to be loaded
                          into velero/node-agent.
                        type: object
                      extraSecretRef:
                        description: Reference to existing secrets with environment
                          variable format.
                        type: string
                      name:
                        description: If set, name of pre-existing Velero secret to
                          be used in case of 'useSecret=true' and empty 'existingSecret'.
                        type: string
                      useSecret:
                        description: Set to false if not using a secret for credentials
                          (i.e., use KIAM or WID)
                        type: boolean
                    type: object
                  deployNodeAgent:
                    type: boolean
                  initContainers:
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      properties:
                        args:
                          description: |-
                            Arguments to the entrypoint.
                            The container image's CMD is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        command:
                          description: |-
                            Entrypoint array. Not executed within a shell.
                            The container image's ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                            cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                            produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Cannot be updated.
                            More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        env:
                          description: |-
                            List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          TODO: Add other useful fields. apiVersion, kind, uid?
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          TODO: Add other useful fields. apiVersion, kind, uid?
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        envFrom:
                          description: |-
                            List of sources to populate environment variables in the container.
                            The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                            will be reported as an event when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take precedence.
                            Values defined by an Env with a duplicate key will take precedence.
                            Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a
                              set of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                              prefix:
                                description: An optional identifier to prepend to
                                  each key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        image:
                          description: |-
                            Container image name.
                            More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management to default or override
                            container images in workload controllers like Deployments and StatefulSets.
                          type: string
                        imagePullPolicy:
                          description: |-
                            Image pull policy.
                            One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                          type: string
                        lifecycle:
                          description: |-
                            Actions that the management system should take in response to container lifecycle events.
                            Cannot be updated.
                          properties:
                            postStart:
                              description: |-
                                PostStart is called immediately after a container is created. If the handler fails,
                                the container is terminated and restarted according to its restart policy.
                                Other management of the container blocks until the hook completes.
                                More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: |-
                                        Command is the command line to execute inside the container, the working directory for the
                                        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                        a shell, you need to explicitly call out to that shell.
                                        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: |-
                                        Host name to connect to, defaults to the pod IP. You probably want to set
                                        "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: |-
                                              The header field name.
                                              This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        Name or number of the port to access on the container.
                                        Number must be in the range 1 to 65535.
                                        Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: |-
                                        Scheme to use for connecting to the host.
                                        Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                sleep:
                                  description: Sleep represents the duration that
                                    the container should sleep before being terminated.
                                  properties:
                                    seconds:
                                      description: Seconds is the number of seconds
                                        to sleep.
                                      format: int64
                                      type: integer
                                  required:
                                  - seconds
                                  type: object
                                tcpSocket:
                                  description: |-
                                    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                    for the backward compatibility. There are no validation of this field and
                                    lifecycle hooks will fail in runtime when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        Number or name of the port to access on the container.
                                        Number must be in the range 1 to 65535.
                                        Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                            preStop:
                              description: |-
                                PreStop is called immediately before a container is terminated due to an
                                API request or management event such as liveness/startup probe failure,
                                preemption, resource contention, etc. The handler is not called if the
                                container crashes or exits. The Pod's termination grace period countdown begins before the
                                PreStop hook is executed. Regardless of the outcome of the handler, the
                                container will eventually terminate within the Pod's termination grace
                                period (unless delayed by finalizers). Other management of the container blocks until the hook completes
                                or until the termination grace period is reached.
                                More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
                              properties:
                                exec:
                                  description: Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: |-
                                        Command is the command line to execute inside the container, the working directory for the
                                        command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                        not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                        a shell, you need to explicitly call out to that shell.
                                        Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request
                                    to perform.
                                  properties:
                                    host:
                                      description: |-
                                        Host name to connect to, defaults to the pod IP. You probably want to set
                                        "Host" in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom
                                          header to be used in HTTP probes
                                        properties:
                                          name:
                                            description: |-
                                              The header field name.
                                              This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        Name or number of the port to access on the container.
                                        Number must be in the range 1 to 65535.
                                        Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: |-
                                        Scheme to use for connecting to the host.
                                        Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                  type: object
                                sleep:
                                  description: Sleep represents the duration that
                                    the container should sleep before being terminated.
                                  properties:
                                    seconds:
                                      description: Seconds is the number of seconds
                                        to sleep.
                                      format: int64
                                      type: integer
                                  required:
                                  - seconds
                                  type: object
                                tcpSocket:
                                  description: |-
                                    Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
                                    for the backward compatibility. There are no validation of this field and
                                    lifecycle hooks will fail in runtime when tcp handler is specified.
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect
                                        to, defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        Number or name of the port to access on the container.
                                        Number must be in the range 1 to 65535.
                                        Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: |-
                            Periodic probe of container liveness.
                            Container will be restarted if the probe fails.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            failureThreshold:
                              description: |-
                                Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: |-
                                    Service is the name of the service to place in the gRPC HealthCheckRequest
                                    (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                    If this is not specified, the default behavior is defined by gRPC.
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: |-
                                Number of seconds after the container has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                            periodSeconds:
                              description: |-
                                How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: |-
                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: |-
                                Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                The grace period is the duration in seconds after the processes running in the pod are sent
                                a termination signal and the time when the processes are forcibly halted with a kill signal.
                                Set this value longer than the expected cleanup time for your process.
                                If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                value overrides the value provided by the pod spec.
                                Value must be non-negative integer. The value zero indicates stop immediately via
                                the kill signal (no opportunity to shut down).
                                This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: |-
                                Number of seconds after which the probe times out.
                                Defaults to 1 second. Minimum value is 1.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: |-
                            Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: |-
                            List of ports to expose from the container. Not specifying a port here
                            DOES NOT prevent that port from being exposed. Any port which is
                            listening on the default "0.0.0.0" address inside a container will be
                            accessible from the network.
                            Modifying this array with strategic merge patch may corrupt the data.
                            For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                            Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: |-
                                  Number of port to expose on the pod's IP address.
                                  This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: |-
                                  Number of port to expose on the host.
                                  If specified, this must be a valid port number, 0 < x < 65536.
                                  If HostNetwork is specified, this must match ContainerPort.
                                  Most containers do not need this.
                                format: int32
                                type: integer
                              name:
                                description: |-
                                  If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                  named port in a pod must have a unique name. Name for the port that can be
                                  referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol for port. Must be UDP, TCP, or SCTP.
                                  Defaults to "TCP".
                                type: string
                            required:
                            - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - containerPort
                          - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: |-
                            Periodic probe of container service readiness.
                            Container will be removed from service endpoints if the probe fails.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            failureThreshold:
                              description: |-
                                Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: |-
                                    Service is the name of the service to place in the gRPC HealthCheckRequest
                                    (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                    If this is not specified, the default behavior is defined by gRPC.
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: |-
                                Number of seconds after the container has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                            periodSeconds:
                              description: |-
                                How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: |-
                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: |-
                                Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                The grace period is the duration in seconds after the processes running in the pod are sent
                                a termination signal and the time when the processes are forcibly halted with a kill signal.
                                Set this value longer than the expected cleanup time for your process.
                                If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                value overrides the value provided by the pod spec.
                                Value must be non-negative integer. The value zero indicates stop immediately via
                                the kill signal (no opportunity to shut down).
                                This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: |-
                                Number of seconds after which the probe times out.
                                Defaults to 1 second. Minimum value is 1.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                          type: object
                        resizePolicy:
                          description: Resources resize policy for the container.
                          items:
                            description: ContainerResizePolicy represents resource
                              resize policy for the container.
                            properties:
                              resourceName:
                                description: |-
                                  Name of the resource to which this resource resize policy applies.
                                  Supported values: cpu, memory.
                                type: string
                              restartPolicy:
                                description: |-
                                  Restart policy to apply when specified resource is resized.
                                  If not specified, it defaults to NotRequired.
                                type: string
                            required:
                            - resourceName
                            - restartPolicy
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        resources:
                          description: |-
                            Compute Resources required by this container.
                            Cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.


                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.


                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                        restartPolicy:
                          description: |-
                            RestartPolicy defines the restart behavior of individual containers in a pod.
                            This field may only be set for init containers, and the only allowed value is "Always".
                            For non-init containers or when this field is not specified,
                            the restart behavior is defined by the Pod's restart policy and the container type.
                            Setting the RestartPolicy as "Always" for the init container will have the following effect:
                            this init container will be continually restarted on
                            exit until all regular containers have terminated. Once all regular
                            containers have completed, all init containers with restartPolicy "Always"
                            will be shut down. This lifecycle differs from normal init containers and
                            is often referred to as a "sidecar" container. Although this init
                            container still starts in the init container sequence, it does not wait
                            for the container to complete before proceeding to the next init
                            container. Instead, the next init container starts immediately after this
                            init container is started, or after any startupProbe has successfully
                            completed.
                          type: string
                        securityContext:
                          description: |-
                            SecurityContext defines the security options the container should be run with.
                            If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
                            More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
                          properties:
                            allowPrivilegeEscalation:
                              description: |-
                                AllowPrivilegeEscalation controls whether a process can gain more
                                privileges than its parent process. This bool directly controls if
                                the no_new_privs flag will be set on the container process.
                                AllowPrivilegeEscalation is true always when the container is:
                                1) run as Privileged
                                2) has CAP_SYS_ADMIN
                                Note that this field cannot be set when spec.os.name is windows.
                              type: boolean
                            appArmorProfile:
                              description: |-
                                appArmorProfile is the AppArmor options to use by this container. If set, this profile
                                overrides the pod's appArmorProfile.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile loaded on the node that should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must match the loaded name of the profile.
                                    Must be set if and only if type is "Localhost".
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of AppArmor profile will be applied.
                                    Valid options are:
                                      Localhost - a profile pre-loaded on the node.
                                      RuntimeDefault - the container runtime's default profile.
                                      Unconfined - no AppArmor enforcement.
                                  type: string
                              required:
                              - type
                              type: object
                            capabilities:
                              description: |-
                                The capabilities to add/drop when running containers.
                                Defaults to the default set of capabilities granted by the container runtime.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            privileged:
                              description: |-
                                Run container in privileged mode.
                                Processes in privileged containers are essentially equivalent to root on the host.
                                Defaults to false.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: boolean
                            procMount:
                              description: |-
                                procMount denotes the type of proc mount to use for the containers.
                                The default is DefaultProcMount which uses the container runtime defaults for
                                readonly paths and masked paths.
                                This requires the ProcMountType feature flag to be enabled.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: string
                            readOnlyRootFilesystem:
                              description: |-
                                Whether this container has a read-only root filesystem.
                                Default is false.
                                Note that this field cannot be set when spec.os.name is windows.
                              type: boolean
                            runAsGroup:
                              description: |-
                                The GID to run the entrypoint of the container process.
                                Uses runtime default if unset.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: |-
                                Indicates that the container must run as a non-root user.
                                If true, the Kubelet will validate the image at runtime to ensure that it
                                does not run as UID 0 (root) and fail to start the container if it does.
                                If unset or false, no such validation will be performed.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: |-
                                The UID to run the entrypoint of the container process.
                                Defaults to user specified in image metadata if unspecified.
                                May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: |-
                                The SELinux context to be applied to the container.
                                If unspecified, the container runtime will allocate a random SELinux context for each
                                container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: |-
                                The seccomp options to use by this container. If seccomp options are
                                provided at both the pod & container level, the container options
                                override the pod options.
                                Note that this field cannot be set when spec.os.name is windows.
                              properties:
                                localhostProfile:
                                  description: |-
                                    localhostProfile indicates a profile defined in a file on the node should be used.
                                    The profile must be preconfigured on the node to work.
                                    Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                    Must be set if type is "Localhost". Must NOT be set for any other type.
                                  type: string
                                type:
                                  description: |-
                                    type indicates which kind of seccomp profile will be applied.
                                    Valid options are:


                                    Localhost - a profile defined in a file on the node should be used.
                                    RuntimeDefault - the container runtime default profile should be used.
                                    Unconfined - no profile should be applied.
                                  type: string
                              required:
                              - type
                              type: object
                            windowsOptions:
                              description: |-
                                The Windows specific settings applied to all containers.
                                If unspecified, the options from the PodSecurityContext will be used.
                                If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                Note that this field cannot be set when spec.os.name is linux.
                              properties:
                                gmsaCredentialSpec:
                                  description: |-
                                    GMSACredentialSpec is where the GMSA admission webhook
                                    (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                    GMSA credential spec named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name
                                    of the GMSA credential spec to use.
                                  type: string
                                hostProcess:
                                  description: |-
                                    HostProcess determines if a container should be run as a 'Host Process' container.
                                    All of a Pod's containers must have the same effective HostProcess value
                                    (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                    In addition, if HostProcess is true then HostNetwork must also be set to true.
                                  type: boolean
                                runAsUserName:
                                  description: |-
                                    The UserName in Windows to run the entrypoint of the container process.
                                    Defaults to the user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext. If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: |-
                            StartupProbe indicates that the Pod has successfully initialized.
                            If specified, no other probes are executed until this completes successfully.
                            If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                            This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                            when it might take a long time to load data or warm a cache, than during steady-state operation.
                            This cannot be updated.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            failureThreshold:
                              description: |-
                                Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                Defaults to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: |-
                                    Service is the name of the service to place in the gRPC HealthCheckRequest
                                    (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).


                                    If this is not specified, the default behavior is defined by gRPC.
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Name or number of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: |-
                                Number of seconds after the container has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                            periodSeconds:
                              description: |-
                                How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: |-
                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    Number or name of the port to access on the container.
                                    Number must be in the range 1 to 65535.
                                    Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: |-
                                Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                                The grace period is the duration in seconds after the processes running in the pod are sent
                                a termination signal and the time when the processes are forcibly halted with a kill signal.
                                Set this value longer than the expected cleanup time for your process.
                                If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                                value overrides the value provided by the pod spec.
                                Value must be non-negative integer. The value zero indicates stop immediately via
                                the kill signal (no opportunity to shut down).
                                This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                                Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: |-
                                Number of seconds after which the probe times out.
                                Defaults to 1 second. Minimum value is 1.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: |-
                            Whether this container should allocate a buffer for stdin in the container runtime. If this
                            is not set, reads from stdin in the container will always result in EOF.
                            Default is false.
                          type: boolean
                        stdinOnce:
                          description: |-
                            Whether the container runtime should close the stdin channel after it has been opened by
                            a single attach. When stdin is true the stdin stream will remain open across multiple attach
                            sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                            first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                            at which time stdin is closed and remains closed until the container is restarted. If this
                            flag is false, a container processes that reads from stdin will never receive an EOF.
                            Default is false
                          type: boolean
                        terminationMessagePath:
                          description: |-
                            Optional: Path at which the file to which the container's termination message
                            will be written is mounted into the container's filesystem.
                            Message written is intended to be brief final status, such as an assertion failure message.
                            Will be truncated by the node if greater than 4096 bytes. The total message length across
                            all containers will be limited to 12kb.
                            Defaults to /dev/termination-log.
                            Cannot be updated.
                          type: string
                        terminationMessagePolicy:
                          description: |-
                            Indicate how the termination message should be populated. File will use the contents of
                            terminationMessagePath to populate the container status message on both success and failure.
                            FallbackToLogsOnError will use the last chunk of container log output if the termination
                            message file is empty and the container exited with an error.
                            The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                            Defaults to File.
                            Cannot be updated.
                          type: string
                        tty:
                          description: |-
                            Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                            Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices
                            to be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw
                              block device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the
                                  container that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - devicePath
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - devicePath
                          x-kubernetes-list-type: map
                        volumeMounts:
                          description: |-
                            Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: |-
                                  Path within the container at which the volume should be mounted.  Must
                                  not contain ':'.
                                type: string
                              mountPropagation:
                                description: |-
                                  mountPropagation determines how mounts are propagated from the host
                                  to container and the other way around.
                                  When not set, MountPropagationNone is used.
                                  This field is beta in 1.10.
                                  When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                  (which defaults to None).
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: |-
                                  Mounted read-only if true, read-write otherwise (false or unspecified).
                                  Defaults to false.
                                type: boolean
                              recursiveReadOnly:
                                description: |-
                                  RecursiveReadOnly specifies whether read-only mounts should be handled
                                  recursively.


                                  If ReadOnly is false, this field has no meaning and must be unspecified.


                                  If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                  recursively read-only.  If this field is set to IfPossible, the mount is made
                                  recursively read-only, if it is supported by the container runtime.  If this
                                  field is set to Enabled, the mount is made recursively read-only if it is
                                  supported by the container runtime, otherwise the pod will not be started and
                                  an error will be generated to indicate the reason.


                                  If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                  None (or be unspecified, which defaults to None).


                                  If this field is not specified, it is treated as an equivalent of Disabled.
                                type: string
                              subPath:
                                description: |-
                                  Path within the volume from which the container's volume should be mounted.
                                  Defaults to "" (volume's root).
                                type: string
                              subPathExpr:
                                description: |-
                                  Expanded path within the volume from which the container's volume should be mounted.
                                  Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                  Defaults to "" (volume's root).
                                  SubPathExpr and SubPath are mutually exclusive.
                                type: string
                            required:
                            - mountPath
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - mountPath
                          x-kubernetes-list-type: map
                        workingDir:
                          description: |-
                            Container's working directory.
                            If not specified, the container runtime's default will be used, which
                            might be configured in the container image.
                            Cannot be updated.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                required:
                - cleanUpCRDs
                - deployNodeAgent
                type: object
            required:
            - bucket
            type: object
          status:
            description: VeleroInstallationStatus defines the observed state of VeleroInstallation
            properties:
              conditions:
                description: Conditions defines current state of the HelmChartProxy.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              matchingClusters:
                description: MatchingClusters is the list of references to Clusters
                  selected by the ClusterSelector.
                items:
                  description: |-
                    ObjectReference contains enough information to let you inspect or modify the referred object.
                    ---
                    New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                     1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                     2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                        restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                        Those cannot be well described when embedded.
                     3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                     4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                        during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                        and the version of the actual struct is irrelevant.
                     5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                    Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                    For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              observedGeneration:
                description: ObservedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
